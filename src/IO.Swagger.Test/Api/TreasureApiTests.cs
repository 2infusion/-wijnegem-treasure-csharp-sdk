/* 
 * ws-treasure
 *
 * tresure api
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TreasureApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TreasureApiTests
    {
        private TreasureApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TreasureApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TreasureApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TreasureApi
            //Assert.IsInstanceOfType(typeof(TreasureApi), instance, "instance is a TreasureApi");
        }

        /// <summary>
        /// Test TreasureControllerCreateManyBase
        /// </summary>
        [Test]
        public void TreasureControllerCreateManyBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateManyTreasureDto body = null;
            //var response = instance.TreasureControllerCreateManyBase(body);
            //Assert.IsInstanceOf<List<Treasure>> (response, "response is List<Treasure>");
        }
        /// <summary>
        /// Test TreasureControllerCreateOneBase
        /// </summary>
        [Test]
        public void TreasureControllerCreateOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Treasure body = null;
            //var response = instance.TreasureControllerCreateOneBase(body);
            //Assert.IsInstanceOf<Treasure> (response, "response is Treasure");
        }
        /// <summary>
        /// Test TreasureControllerDeleteOneBase
        /// </summary>
        [Test]
        public void TreasureControllerDeleteOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.TreasureControllerDeleteOneBase(id);
            
        }
        /// <summary>
        /// Test TreasureControllerGetManyBase
        /// </summary>
        [Test]
        public void TreasureControllerGetManyBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> fields = null;
            //string s = null;
            //List<string> filter = null;
            //List<string> or = null;
            //List<string> sort = null;
            //List<string> join = null;
            //int? limit = null;
            //int? offset = null;
            //int? page = null;
            //int? cache = null;
            //var response = instance.TreasureControllerGetManyBase(fields, s, filter, or, sort, join, limit, offset, page, cache);
            //Assert.IsInstanceOf<InlineResponse2003> (response, "response is InlineResponse2003");
        }
        /// <summary>
        /// Test TreasureControllerGetOneBase
        /// </summary>
        [Test]
        public void TreasureControllerGetOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string> fields = null;
            //List<string> join = null;
            //int? cache = null;
            //var response = instance.TreasureControllerGetOneBase(id, fields, join, cache);
            //Assert.IsInstanceOf<Treasure> (response, "response is Treasure");
        }
        /// <summary>
        /// Test TreasureControllerReplaceOneBase
        /// </summary>
        [Test]
        public void TreasureControllerReplaceOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Treasure body = null;
            //string id = null;
            //var response = instance.TreasureControllerReplaceOneBase(body, id);
            //Assert.IsInstanceOf<Treasure> (response, "response is Treasure");
        }
        /// <summary>
        /// Test TreasureControllerUpdateOneBase
        /// </summary>
        [Test]
        public void TreasureControllerUpdateOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Treasure body = null;
            //string id = null;
            //var response = instance.TreasureControllerUpdateOneBase(body, id);
            //Assert.IsInstanceOf<Treasure> (response, "response is Treasure");
        }
    }

}
