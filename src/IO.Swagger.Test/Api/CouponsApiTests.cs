/* 
 * ws-treasure
 *
 * tresure api
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CouponsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CouponsApiTests
    {
        private CouponsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CouponsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CouponsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CouponsApi
            //Assert.IsInstanceOfType(typeof(CouponsApi), instance, "instance is a CouponsApi");
        }

        /// <summary>
        /// Test CouponControllerCreateManyBase
        /// </summary>
        [Test]
        public void CouponControllerCreateManyBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateManyCouponDto body = null;
            //var response = instance.CouponControllerCreateManyBase(body);
            //Assert.IsInstanceOf<List<Coupon>> (response, "response is List<Coupon>");
        }
        /// <summary>
        /// Test CouponControllerCreateOneBase
        /// </summary>
        [Test]
        public void CouponControllerCreateOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Coupon body = null;
            //var response = instance.CouponControllerCreateOneBase(body);
            //Assert.IsInstanceOf<Coupon> (response, "response is Coupon");
        }
        /// <summary>
        /// Test CouponControllerDeleteOneBase
        /// </summary>
        [Test]
        public void CouponControllerDeleteOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.CouponControllerDeleteOneBase(id);
            
        }
        /// <summary>
        /// Test CouponControllerGetManyBase
        /// </summary>
        [Test]
        public void CouponControllerGetManyBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> fields = null;
            //string s = null;
            //List<string> filter = null;
            //List<string> or = null;
            //List<string> sort = null;
            //List<string> join = null;
            //int? limit = null;
            //int? offset = null;
            //int? page = null;
            //int? cache = null;
            //var response = instance.CouponControllerGetManyBase(fields, s, filter, or, sort, join, limit, offset, page, cache);
            //Assert.IsInstanceOf<InlineResponse2004> (response, "response is InlineResponse2004");
        }
        /// <summary>
        /// Test CouponControllerGetOneBase
        /// </summary>
        [Test]
        public void CouponControllerGetOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string> fields = null;
            //List<string> join = null;
            //int? cache = null;
            //var response = instance.CouponControllerGetOneBase(id, fields, join, cache);
            //Assert.IsInstanceOf<Coupon> (response, "response is Coupon");
        }
        /// <summary>
        /// Test CouponControllerReplaceOneBase
        /// </summary>
        [Test]
        public void CouponControllerReplaceOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Coupon body = null;
            //string id = null;
            //var response = instance.CouponControllerReplaceOneBase(body, id);
            //Assert.IsInstanceOf<Coupon> (response, "response is Coupon");
        }
        /// <summary>
        /// Test CouponControllerUpdateOneBase
        /// </summary>
        [Test]
        public void CouponControllerUpdateOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Coupon body = null;
            //string id = null;
            //var response = instance.CouponControllerUpdateOneBase(body, id);
            //Assert.IsInstanceOf<Coupon> (response, "response is Coupon");
        }
    }

}
