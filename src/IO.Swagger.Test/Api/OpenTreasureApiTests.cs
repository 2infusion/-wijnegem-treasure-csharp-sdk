/* 
 * ws-treasure
 *
 * tresure api
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OpenTreasureApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OpenTreasureApiTests
    {
        private OpenTreasureApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OpenTreasureApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OpenTreasureApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OpenTreasureApi
            //Assert.IsInstanceOfType(typeof(OpenTreasureApi), instance, "instance is a OpenTreasureApi");
        }

        /// <summary>
        /// Test OpenTreasureControllerCreateManyBase
        /// </summary>
        [Test]
        public void OpenTreasureControllerCreateManyBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateManyOpenTreasureDto body = null;
            //var response = instance.OpenTreasureControllerCreateManyBase(body);
            //Assert.IsInstanceOf<List<OpenTreasure>> (response, "response is List<OpenTreasure>");
        }
        /// <summary>
        /// Test OpenTreasureControllerCreateOneBase
        /// </summary>
        [Test]
        public void OpenTreasureControllerCreateOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OpenTreasure body = null;
            //var response = instance.OpenTreasureControllerCreateOneBase(body);
            //Assert.IsInstanceOf<OpenTreasure> (response, "response is OpenTreasure");
        }
        /// <summary>
        /// Test OpenTreasureControllerDeleteOneBase
        /// </summary>
        [Test]
        public void OpenTreasureControllerDeleteOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.OpenTreasureControllerDeleteOneBase(id);
            
        }
        /// <summary>
        /// Test OpenTreasureControllerGetManyBase
        /// </summary>
        [Test]
        public void OpenTreasureControllerGetManyBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> fields = null;
            //string s = null;
            //List<string> filter = null;
            //List<string> or = null;
            //List<string> sort = null;
            //List<string> join = null;
            //int? limit = null;
            //int? offset = null;
            //int? page = null;
            //int? cache = null;
            //var response = instance.OpenTreasureControllerGetManyBase(fields, s, filter, or, sort, join, limit, offset, page, cache);
            //Assert.IsInstanceOf<InlineResponse2002> (response, "response is InlineResponse2002");
        }
        /// <summary>
        /// Test OpenTreasureControllerGetOneBase
        /// </summary>
        [Test]
        public void OpenTreasureControllerGetOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string> fields = null;
            //List<string> join = null;
            //int? cache = null;
            //var response = instance.OpenTreasureControllerGetOneBase(id, fields, join, cache);
            //Assert.IsInstanceOf<OpenTreasure> (response, "response is OpenTreasure");
        }
        /// <summary>
        /// Test OpenTreasureControllerReplaceOneBase
        /// </summary>
        [Test]
        public void OpenTreasureControllerReplaceOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OpenTreasure body = null;
            //string id = null;
            //var response = instance.OpenTreasureControllerReplaceOneBase(body, id);
            //Assert.IsInstanceOf<OpenTreasure> (response, "response is OpenTreasure");
        }
        /// <summary>
        /// Test OpenTreasureControllerUpdateOneBase
        /// </summary>
        [Test]
        public void OpenTreasureControllerUpdateOneBaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OpenTreasure body = null;
            //string id = null;
            //var response = instance.OpenTreasureControllerUpdateOneBase(body, id);
            //Assert.IsInstanceOf<OpenTreasure> (response, "response is OpenTreasure");
        }
    }

}
